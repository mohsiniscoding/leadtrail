# Generated by Django 5.1.11 on 2025-09-05 12:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portal', '0019_add_snov_quota'),
    ]

    operations = [
        migrations.CreateModel(
            name='SnovLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin_profiles_processed', models.JSONField(default=list, help_text='List of LinkedIn profile URLs that were processed through Snov.io', verbose_name='LinkedIn Profiles Processed')),
                ('emails_found', models.JSONField(default=list, help_text='List of email addresses found with their status and associated profiles', verbose_name='Emails Found')),
                ('processing_status', models.CharField(choices=[('SUCCESS', 'Success'), ('PARTIAL_SUCCESS', 'Partial Success'), ('NO_EMAILS_FOUND', 'No Emails Found'), ('API_ERROR', 'API Error'), ('PROCESSING_ERROR', 'Processing Error')], default='SUCCESS', help_text='Overall status of the Snov.io processing', max_length=50, verbose_name='Processing Status')),
                ('processing_notes', models.TextField(blank=True, help_text='Additional notes about the processing, including any errors or warnings', verbose_name='Processing Notes')),
                ('profiles_processed_count', models.PositiveIntegerField(default=0, help_text='Number of LinkedIn profiles successfully processed', verbose_name='Profiles Processed Count')),
                ('total_emails_found', models.PositiveIntegerField(default=0, help_text='Total number of email addresses found across all profiles', verbose_name='Total Emails Found')),
                ('processed_at', models.DateTimeField(auto_now_add=True, help_text='When the Snov.io processing was completed', verbose_name='Processed At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated', verbose_name='Updated At')),
                ('company_number', models.OneToOneField(help_text='The company number this Snov lookup belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='snov_lookup', to='portal.companynumber')),
            ],
            options={
                'verbose_name': 'Snov Lookup',
                'verbose_name_plural': 'Snov Lookups',
                'ordering': ['-processed_at'],
            },
        ),
    ]
